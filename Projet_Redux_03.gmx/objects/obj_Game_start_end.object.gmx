<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>711</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_life</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>701</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_score</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variables
globalvar vdeath;
vdeath = 0;
globalvar vfruit;
vfruit = 0;
globalvar vme;
vme = 0;
vtm = 1;
startAlarme = 0;
alarmeTimeDeath = 45;

/////////////////////////Spawn
// alarm de spawn des baloon 
alarm[2]= 5;
// alarm de spawn des invader
alarm[3]= 5;
// alarm de spawn des buster
alarm[4]= 5;
// variable de spawn 
vspawnbuster = 0;
vtsbuster = 0;
vspawnDrunk = 1;
vspawnstoner = 1;
vtsb = 0;
vspawnb = 0;
vspawninvader = 0;
vtsi = 0;
vspawnincendo = 1;
vspawncoiley = 1;

/*

if (room = Level_20){
// timeline de spawn des bulle d'eau 
timeline_index = TL_bulle_d_eau;
timeline_running = true;
}
vspawn = 0;

globalvar timeToChangeRoom;
timeToChangeRoom = 240;

*/
//Ennemis qui s'enerve
vlife = lives; 
vennemieNRV = 0;

//Baron
vtimerbaron = 1800;

/*
//Sound
audio_play_sound(Global, 10, true);

*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variable skull Head

vpopdiff = 0;
vpopsh = 0;
vpopcount = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>712</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_life</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>711</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_life</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//var vretourdrunk = keyboard_check(ord("A"));
//if ( room = Menu_Room_MainMenuBitch)||( room = Menu_Room_Victory)||( room = Menu_Room_GameOver){
//do nothing
//}else{

/*
if (vretourdrunk = true){
    vennemieNRV = 0;
}
if (instance_exists(obj_Bub_dead)){
    vennemieNRV = 0;
}
*/

////////////////////////////////////////////Baron Base
if (vlife = lives){
}else{
    vtimerbaron = 1800;
    vlife = lives;
    //show_debug_message("debut timer");
}
vtimerbaron--;
show_debug_message(vtimerbaron);
    if ( vtimerbaron = 0){
        instance_create(24,32, obj_Baal);
        show_debug_message("BARON CREATE !!!");
    }
    if (vtimerbaron = 300){
        vennemieNRV = 1;
        //show_debug_message("ENNEMIE NRV !!!");
    }

//////////////////////////////////////Calcul des ames

if (vtm=0)
{
    
    vme = vfruit;
    //show_debug_message("entrer");
    show_debug_message(vme);
    //vfruit = 0;
    vtm = 1;
}

if ( vfruit &gt; 0)
{ 
    if (startAlarme = 0)
    {
    show_debug_message("start alarme 0");
    alarmeTimeDeath = 45;
    //alarme[1] = 45;
    startAlarme = 1;
    }
}

if (startAlarme == 1)
{
alarmeTimeDeath -=1;
}


if (alarmeTimeDeath == 0)
{
startAlarme = 0;
vtm = 0;
}


/*
//////////////////////////////////////////Variable Level 01
if (room = Level_01){
     if ( vdeath = 3)
    {
        timeToChangeRoom -= 1;
        if (timeToChangeRoom == 0)
            {
            room_goto(Level_20);
            vdeath = 0;
            timeToChangeRoom = 240;
            vfruit = 0;
            vlife = lives;
            vennemieNRV = 0;
            vtimerbaron = 1800;
            }
    }
    if ( vdeath = 2){
        vennemieNRV = 1;
    }
 }
//////////////////////////////////////////Variable Level 20
  if (room = Level_20){
     if ( vdeath = 5)
    {
        timeToChangeRoom -= 1;
        if (timeToChangeRoom == 0)
            {
            room_goto(Level_47);
            vdeath = 0;
            timeToChangeRoom = 240;
            vfruit = 0;
            vlife = lives;
            vennemieNRV = 0;
            vtimerbaron = 1800;
            }
    }
     if ( vdeath = 4){
        vennemieNRV = 1;
    }
 }
//////////////////////////////////////////Variable Level 47
  if (room = Level_47){
     if ( vdeath = 7)
    {
        timeToChangeRoom -= 1;
        if (timeToChangeRoom == 0)
        {
        room_goto(Level_62);
        vdeath = 0;
        timeToChangeRoom = 240;
        vfruit = 0;
        vlife = lives;
        vennemieNRV = 0;
        vtimerbaron = 1800;
        }
    }
     if ( vdeath = 6){
        vennemieNRV = 1;
    }
 }
//////////////////////////////////////////Variable Level 62
  if (room = Level_62){
     if ( vdeath = 7)
    {
        timeToChangeRoom -= 1;
        if (timeToChangeRoom == 0)
        {
        show_debug_message("GGGGGGGGGGGGAAAAAAAAAAAAGGGGGGGGGGNNNNNNNNNNNEEEEEEEEEEEEERRRRRRRRRRRRRRRRRRRRRRRRRRRRR");
        room_goto(Menu_Room_Victory);
        //vdeath = 0;
        //vlife = lives;
        //vennemieNRV = 0;
        //vtimerbaron = 1800;
        }
    }
     if ( vdeath = 6){
        vennemieNRV = 1;
    }
 }

*/

/////////////////////////////////////////////////// Level 1
/*
 if (room = Level_01){
            // Spawn des Invader
            if ( vspawnbuster &lt; 3) &amp;&amp; (vtsbuster = 1){
                instance_create(120,16, obj_buster);
                ++vspawnbuster; 
                vtsbuster=0;
            }
        }
        */
//////////////////////////////////////////////////// Level 20
        /*
        if (room = Level_20){
            // Spawn des baloons
            if ( vspawnb &lt; 3) &amp;&amp; (vtsb = 1){
                instance_create(104,80, obj_baloon);
                ++vspawnb; 
                vtsb=0;
            }
            /// debut de la timeline de creation des bulle d'eau
                timeline_index = TL_bulle_d_eau;
                timeline_running = true;
                vspawn = 0;
        }
        if (room = Level_20){
            // Spawn des stoner
            if ( vspawnstoner = 1){
                instance_create(64,40, obj_stoner);
                instance_create(184,40, obj_stoner);
                vspawnstoner =  0;
            }
        }
        if (!room = Level_20 ) {
        timeline_index = TL_bulle_d_eau;
        timeline_running = false;
        } 
        */
////////////////////////////////////////////////////// Level 47
/*
    if (room = Level_47){
            // Spawn des Drunk
            if ( vspawnincendo = 1){
                instance_create(120,160, obj_incendo);
                instance_create(184,80, obj_incendo);
                instance_create(48,104, obj_incendo);
                vspawnincendo =  0;
            }
        }
    if (room = Level_47){
            // Spawn des Drunk
            if ( vspawncoiley = 1){
                instance_create(48,48, obj_coiley);
                instance_create(56,48, obj_coiley);
                instance_create(192,48, obj_coiley);
                instance_create(200,48, obj_coiley);
                vspawncoiley =  0;
            }
            
            /// debut de la timeline de creation des bulle d'eau
                timeline_index = TL_bulle_feu;
                timeline_running = true;
        }
        */

////////////////////////////////////////////////////////// Level 62
        /*if (room = Level_62){
            // Spawn des Invader
            if ( vspawninvader &lt; 3) &amp;&amp; (vtsi = 1){
                instance_create(120,6, obj_Invader);
                ++vspawninvader; 
                vtsi=0;
            }
            /// debut de la timeline de creation des bulle d'eau
                timeline_index = TL_bulle_eclair;
                timeline_running = true;
        }
        
        if (room = Level_62){
            // Spawn des Drunk
            if ( vspawnDrunk = 1){
                instance_create(24,24, obj_Drunk);
                instance_create(56,24, obj_Drunk);
                instance_create(184,24, obj_Drunk);
                instance_create(216,24, obj_Drunk);
                vspawnDrunk =  0;
            }
        }
        */
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// restart game
var GP_Restart = gamepad_button_check(0, gp_face4);

if (GP_Restart)
{
game_restart();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// pop des skullHead

if (room = rm_Niveau_4_test)
{
    vpopsh--;
    
    if ( vpopcount &lt;= 10)
    {
        if (vpopsh &lt;= 0)
        {
            if (vpopdiff = 0)
            {
                vpopdiff = 1;
            }else
            {
                vpopdiff = 0;
            }  
            
            if(vpopdiff = 1)
            {      
                instance_create(64, 96, obj_SkullHead);
                vpopsh = 15;
                vpopcount++;
            }else
            {
                instance_create(416, 112, obj_SkullHead);
                vpopsh = 15;
                vpopcount++;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
