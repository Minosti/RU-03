<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SPR_BAAL_NOWINGED</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variable

vmd = 1;
vtf = 1;

spd = 6;
jspd = 10;
hspd = 0;
vspd = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// fin de mouvement du fantom

vtf = 1
vmove = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// alarme

vmd = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Deplacement


/// Mouvement 
if (instance_exists(obj_Joueur))
{
vdv1 = (obj_Joueur.y - y);
vdh1 = (obj_Joueur.x - x);

vdva1 = (vdv1 * vdv1);
vdha1 = (vdh1 * vdh1);


if (vtf = 1){
    if (vmd = 1){ 
        if (y &lt; obj_Joueur.y) {
            if (obj_Joueur.x &lt; x){
                if (vdva1 &lt;= vdha1){
                    vmove = 1;
                    //show_debug_message("gauche1");
                }else{
                    vmove = 3;
                    //show_debug_message("Bas1");
                }
            }else{
                if (vdva1 &lt;= vdha1){
                    vmove = 2;
                    //show_debug_message("droite1");
                }else{
                    vmove = 3;
                    //show_debug_message("Bas2");
                }
            }
        }else{
              if (obj_Joueur.x &lt; x){
                if (vdva1 &lt;= vdha1){
                    vmove = 1;
                    //show_debug_message("gauche2");
                }else{
                    vmove = 4;
                    //show_debug_message("Haut1");
                }
            }else{
                if (vdva1 &lt;= vdha1){
                    vmove = 2;
                    show_debug_message("droite2");
                }else{
                    vmove = 4;
                    show_debug_message("Haut2");
                }
            } 
                   
        }
vmd = 0;
vtf = 0;
alarm[1] = 20;
alarm[2] = 10;
}else{
    lkey = false;
    rkey = false;
    ukey = false;
    dkey = false;
    }
}
//show_debug_message( vmove);
    if ( vmove = 1){
           lkey = true;
           rkey = false;
           ukey = false;
           dkey = false;
    }
    if ( vmove = 2){
           lkey = false;
           rkey = true;
           ukey = false;
           dkey = false;
    }
    if ( vmove = 3){
           lkey = false;
           rkey = false;
           ukey = false;
           dkey = true;
    }
    if ( vmove = 4){
           lkey = false;
           rkey = false;
           ukey = true;
           dkey = false;
    }

if (vtf = 0){
    vspd = 0;
    hspd =0;
//Moving right 
if (rkey){ 
    hspd = spd;
}

//Moving left 
if (lkey){ 
    hspd = -spd;
}

//Moving up 
if (ukey){ 
    vspd = -spd;
}

//Moving Down
if (dkey){ 
    vspd = spd;
}
// Move vertically
y += vspd;
// Move horizontally 
x += hspd;
}

}else{
instance_destroy();
}
/*
if (room = Level_01) &amp;&amp; (vdeath == 3)
{
instance_destroy();
}

if (room = Level_20) &amp;&amp; (vdeath == 5)
{
instance_destroy();
}

if (room = Level_47) &amp;&amp; (vdeath == 7)
{
instance_destroy();
}

if (room = Level_62) &amp;&amp; (vdeath == 7)
{
instance_destroy();
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
