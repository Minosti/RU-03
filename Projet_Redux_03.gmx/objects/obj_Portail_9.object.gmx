<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Portail_9</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// variables

// variable de stop du check d'objet pour le transfere (un objet a la fois);
vstopcheck = 0;

// Variable de POSition de l'OBJet (par rapport au point de reference de l'objet)
vposobj = 0;

// Variable Position De Transfere 
vpdt = 0;

// Variable de test 1
vtest1 = 0;

// Variable de Transfere de Position en X et en Y
vtpx = 0;
vtpy = 0;

// Variable de Position Indicative en X et en Y (de ce portail)
    //position 1
    vpix1 = x + 33;
    vpiy1 = y + 64;
    //position 2
    vpix2 = x + 33;
    vpiy2 = y + 48;
    //position 3
    vpix3 = x + 33;
    vpiy3 = y + 32;
    //position 4
    vpix4 = x + 33;
    vpiy4 = y + 16;
    
    
// Variable timer pour le micro "dash" en sorti de portail 

vtimerhspd = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Test 1 calcul du centre 

// Si collistion avec le joueur alors on check la difference sur y( dans ce cas la car le portail est vertical)
// on utilise vposobj (Variable de POSition de l'OBJet) pour calculer la difference 
// en fonction de cette difference on attribue un valeur a vpdt ( Variable Position de Transfere) qui servira a lui donner un point sur 
// le portail de reception


if (place_meeting(x,y, all) &amp;&amp; vstopcheck = 0)
{


vobjectcol = instance_place(x , y, all);

//if (vobjectcol.vtptrue = true )

    //{ 
    
        vposobj = (y-vobjectcol.y);
    
        if (vposobj &gt;= -16)
        {
            vpdt = 1;
        }else
        {
            if (vposobj &gt;= -32)
            {
                vpdt = 2;
            }else
            {
                 if (vposobj &gt;= -48)
                {
                    vpdt = 3;
                }else
                {
                    if (vposobj &gt;= -64)
                    {
                        vpdt = 4;
                    }
                }
            }
        }
     
    
    
    // on utilise vpdt pour attribuer une valeur a vtpx et vtpy ( Variable de Transfere de Position X (ou Y)) 
    // vtpx et vtpy prenne les valeur respective de vpix1 et vpiy1 ( Variable de Position Indicative en X 1 ( pareil pour Y))
    
    
        if (vpdt = 1)
        {
            vtpx = obj_Portail_10.vpix1
            vtpy = obj_Portail_10.vpiy1
        }else
        {
            if (vpdt = 2)
            {
                vtpy = obj_Portail_10.vpiy2
                vtpx = obj_Portail_10.vpix2
            }else
            {
                if (vpdt = 3)
                {
                    vtpx = obj_Portail_10.vpix3
                    vtpy = obj_Portail_10.vpiy3
                }else
                {
                    if (vpdt = 4)
                    {
                        vtpy = obj_Portail_10.vpiy4
                        vtpx = obj_Portail_10.vpix4
                    }
                }   
            }
        }
    
    // la nouvelle position du joueur lui est donn√©e
    
        vobjectcol.x = vtpx;
        vobjectcol.y = vtpy;
        
        vobjectcol.hspd = 0;
        vobjectcol.vspd = 0;
        
       // vobjectcol.vspeed = 10;
       // vtimerhspd = 10;
        
     
    //}
}

vtimerhspd--;
if ( vtimerhspd = 0)
{
    vobjectcol.vspeed = 0;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
